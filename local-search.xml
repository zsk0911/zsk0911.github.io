<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Git</title>
    <link href="/2022/09/09/git/"/>
    <url>/2022/09/09/git/</url>
    
    <content type="html"><![CDATA[<h3 id="Git配置多个用户"><a href="#Git配置多个用户" class="headerlink" title="Git配置多个用户"></a>Git配置多个用户</h3><p>有时候在公司需要使用自己个人的github账号，但必须保证公司使用的gitlab账号没有影响，这个就需要同一台设备配置多账号。</p><h4 id="一、生成ssh密钥"><a href="#一、生成ssh密钥" class="headerlink" title="一、生成ssh密钥"></a>一、生成ssh密钥</h4><p>分别对github和gitlab生成对应的ssh密钥，并配置git访问不同的host的时候使用不同的密钥</p><ol><li>公司团队：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;公司邮箱地址&quot;</span><br></code></pre></td></tr></table></figure></li><li>个人：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;个人github邮箱&quot;</span> -f ~/.ssh/id_rsa.github<br></code></pre></td></tr></table></figure></li><li>在终端找到进入到 .ssh 文件目录 把 id_rsa.pub 的内容配置到gitlab上面 把 id_rsa.github.pub 的内容配置到自己的githua上面</li><li>在 .ssh 文件下面创建一个 config 文件 添加配置<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">Host gitlab<br>    HostName gitlab.com<br>    <span class="hljs-keyword">User</span> <span class="hljs-title">gitlab</span><br>    IdentityFile ~/.ssh/id_rsa.pub<br>Host github<br>    HostName github.com<br>    <span class="hljs-keyword">User</span> <span class="hljs-title">github</span><br>    Identityfile ~/.ssh/id_rsa.github<br></code></pre></td></tr></table></figure></li></ol><h4 id="二、测试"><a href="#二、测试" class="headerlink" title="二、测试"></a>二、测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@gitlab<br><span class="hljs-comment"># 如果配置成功会提示</span><br>Welcome to GitLab, @gitlab!<br><br>ssh -T git@github<br><span class="hljs-comment"># 如果配置成功会提示</span><br>Hi github!............<br></code></pre></td></tr></table></figure><h4 id="三、配置Git仓库"><a href="#三、配置Git仓库" class="headerlink" title="三、配置Git仓库"></a>三、配置Git仓库</h4><p>git的config文件记录了用户的基本信息，我们的账号信息也在里面，在这里我们要做的就是在本地仓库配置不同的用户信息访问不同的远程仓库</p><p>config文件通常有三个位置：</p><ul><li>system(系统级) 位于计算机git的安装目录，包含了适用于系统所有用户和所有库的值。如果你使用 –system ，它将明确的读和写这个文件。</li><li>global(用户级) 位于～&#x2F;.gitconfig,具体到你的用户。你可以通过 –global 选项是Git读或写这个特定的文件。</li><li>local(仓库级) 位于.git&#x2F;config,无论你当前在用的库是什么，特定指向该单一的库，优先级最高。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 公司团队配置</span><br>git config --global user.name <span class="hljs-string">&#x27;gitlab&#x27;</span> // 公司账号名称<br>git config --global user.email <span class="hljs-string">&#x27;gitlab@gitlab.com&#x27;</span> // 公司邮箱<br><br><span class="hljs-comment"># 个人账号配置</span><br>git config --<span class="hljs-built_in">local</span> user.name <span class="hljs-string">&#x27;github&#x27;</span> <br>git config --<span class="hljs-built_in">local</span> user.email <span class="hljs-string">&#x27;github@github.com&#x27;</span><br></code></pre></td></tr></table></figure></li></ul><h4 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 之前的方式:单个账号</span><br>git <span class="hljs-built_in">clone</span> git@github.com:xxxx/xxx.git <span class="hljs-comment">#缺省config配置时</span><br>git <span class="hljs-built_in">clone</span> git@github:xxxx/xxx.git <span class="hljs-comment">#config配置后，等价于第一条语句</span><br><br><span class="hljs-comment"># 现在要改为，git clone git@域名别称：xxxx/xxx.git</span><br><span class="hljs-comment"># 就是使用域名地址的别名来区分</span><br>git <span class="hljs-built_in">clone</span> git@github:xxxx/xxx.git<br>git <span class="hljs-built_in">clone</span> git@gitlab:xxxx/xxx.git<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
