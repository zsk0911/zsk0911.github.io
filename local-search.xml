<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux</title>
    <link href="/2022/12/15/Linux/"/>
    <url>/2022/12/15/Linux/</url>
    
    <content type="html"><![CDATA[<h3 id="Linux-man-pages-中文配置"><a href="#Linux-man-pages-中文配置" class="headerlink" title="Linux man pages 中文配置"></a>Linux man pages 中文配置</h3><p>:1. 使用 wget 下载安装包，如果没有 wget 可以 Google 查看怎样安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/manpages-zh/manpages-zh-1.5.1.tar.gz --no-check-certificate<br></code></pre></td></tr></table></figure><p>:2. 解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar zxvf manpages-zh-1.5.1.tar.gz<br></code></pre></td></tr></table></figure><p>:3 安装</p><p>先进入到解压的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> manpages-zh-1.5.1<br>./configure --disable-zhtw<br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><p>:4. 配置别名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs base">cd ~<br>ls -a<br>open -a 编辑器 .bashrc<br></code></pre></td></tr></table></figure><p>在文件后面添加下面的语句，保存，退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> cman=<span class="hljs-string">&#x27;man -M /usr/local/share/man/zh_CN&#x27;</span><br><span class="hljs-built_in">source</span> .bashrc<br></code></pre></td></tr></table></figure><p>接着可以使用 alias 查看配置的别名，如果没有问题，那么就可以使用 cman + 命令 来查询了</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CLI Develop</title>
    <link href="/2022/11/25/CLI-Develop/"/>
    <url>/2022/11/25/CLI-Develop/</url>
    
    <content type="html"><![CDATA[<h3 id="cli工具库"><a href="#cli工具库" class="headerlink" title="cli工具库"></a>cli工具库</h3><ol><li>commander 命令行自定义指令</li><li>inquirer 命令行询问用户问题，记录回答结果</li><li>chalk 控制台输出内容样式美化</li><li>ora 控制台loading样式</li><li>figlet 控制台打印log</li><li>easy-table 控制台输出表格</li><li>download-git-repo 下载远程模板 依赖有安全问题并且已不再维护</li><li>fs-extra 系统fs模块的扩展，提供了更多便利的API，并继承了fs模块的API</li><li>cross-spawn 支持跨平台调用系统上的命令</li><li>git-clone 下载模版</li><li>handlebars 语义模版</li><li>shelljs 脚本语言解析器</li></ol><h3 id="chalk引用报错"><a href="#chalk引用报错" class="headerlink" title="chalk引用报错"></a>chalk引用报错</h3><p>解：新版本不支持ES Module 使用指定版本</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">npm</span> uninstall chalk<br><br><span class="hljs-attribute">npm</span> install chalk@<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h3 id="inpuirer引用报错"><a href="#inpuirer引用报错" class="headerlink" title="inpuirer引用报错"></a>inpuirer引用报错</h3><p>解决：新版本不支持ES Module 使用指定版本</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">npm</span> uninstall inquirer<br><br><span class="hljs-attribute">npm</span> install inquirer@<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="ora引用报错"><a href="#ora引用报错" class="headerlink" title="ora引用报错"></a>ora引用报错</h3><p>解决：新版本不支持ES Module 使用指定版本</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">npm</span> uninstall ora<br><br><span class="hljs-attribute">npm</span> install ora@<span class="hljs-number">5</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>npm</title>
    <link href="/2022/11/25/npm-md/"/>
    <url>/2022/11/25/npm-md/</url>
    
    <content type="html"><![CDATA[<h3 id="Mac-npm-link-报错"><a href="#Mac-npm-link-报错" class="headerlink" title="Mac npm link 报错"></a>Mac npm link 报错</h3><p>解： 在命令前面加上 sudo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo npm <span class="hljs-built_in">link</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>tool</title>
    <link href="/2022/11/25/tool/"/>
    <url>/2022/11/25/tool/</url>
    
    <content type="html"><![CDATA[<h3 id="API查询"><a href="#API查询" class="headerlink" title="API查询"></a>API查询</h3><ol><li>devdocs.iox</li></ol><h3 id="记录笔记"><a href="#记录笔记" class="headerlink" title="记录笔记"></a>记录笔记</h3><ol><li>Bear</li><li>Typora</li></ol><h3 id="日历"><a href="#日历" class="headerlink" title="日历"></a>日历</h3><ol><li>itsycal</li></ol><h3 id="开发者工具"><a href="#开发者工具" class="headerlink" title="开发者工具"></a>开发者工具</h3><ol><li>DevToysMac</li></ol><h3 id="文件对比"><a href="#文件对比" class="headerlink" title="文件对比"></a>文件对比</h3><ol><li>Cornerstone</li></ol><h3 id="加速"><a href="#加速" class="headerlink" title="加速"></a>加速</h3><ol><li>DevSidecar</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>RegExp</title>
    <link href="/2022/09/14/RegExp/"/>
    <url>/2022/09/14/RegExp/</url>
    
    <content type="html"><![CDATA[<h3 id="IP匹配"><a href="#IP匹配" class="headerlink" title="IP匹配"></a>IP匹配</h3><ul><li>支持0.0.0.0到255.255.255.255(没有前导0)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">/^(([<span class="hljs-number">1</span>-<span class="hljs-number">9</span>]?\d|<span class="hljs-number">1</span>\d&#123;<span class="hljs-number">2</span>&#125;|<span class="hljs-number">2</span>[<span class="hljs-number">0</span>-<span class="hljs-number">4</span>]\d|<span class="hljs-number">25</span>[<span class="hljs-number">0</span>-<span class="hljs-number">5</span>])\.)&#123;<span class="hljs-number">3</span>&#125;([<span class="hljs-number">1</span>-<span class="hljs-number">9</span>]?\d|<span class="hljs-number">1</span>\d&#123;<span class="hljs-number">2</span>&#125;|<span class="hljs-number">2</span>[<span class="hljs-number">0</span>-<span class="hljs-number">4</span>]\d|<span class="hljs-number">25</span>[<span class="hljs-number">0</span>-<span class="hljs-number">5</span>])$/<br></code></pre></td></tr></table></figure></li><li>支持000.000.000.000到255.255.255.255(可以含有前导0)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">/^((?:(?:<span class="hljs-number">25</span>[<span class="hljs-number">0</span>-<span class="hljs-number">5</span>]|<span class="hljs-number">2</span>[<span class="hljs-number">0</span>-<span class="hljs-number">4</span>]\d|[<span class="hljs-number">01</span>]?\d?\d)\.)&#123;<span class="hljs-number">3</span>&#125;(?:<span class="hljs-number">25</span>[<span class="hljs-number">0</span>-<span class="hljs-number">5</span>]|<span class="hljs-number">2</span>[<span class="hljs-number">0</span>-<span class="hljs-number">4</span>]\d|[<span class="hljs-number">01</span>]?\d?\d))$/<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>React</title>
    <link href="/2022/09/14/react/"/>
    <url>/2022/09/14/react/</url>
    
    <content type="html"><![CDATA[<h3 id="useEffect-使用-async-await"><a href="#useEffect-使用-async-await" class="headerlink" title="useEffect 使用 async await"></a>useEffect 使用 async await</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> [data, setData] = <span class="hljs-title function_">useState</span>(&#123; <span class="hljs-attr">courses</span>: [] &#125;);<br>    <br><span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    (<span class="hljs-keyword">async</span> () =&gt; &#123;<br>        <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> axios.<span class="hljs-title function_">get</span>(<br>            <span class="hljs-string">&quot;http://example.com/api/v1/categories/&quot;</span><br>        );<br>        <span class="hljs-title function_">setData</span>(result.<span class="hljs-property">data</span>);<br>    &#125;)();<br>&#125;, []);<br>    <br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>antd</title>
    <link href="/2022/09/14/antd/"/>
    <url>/2022/09/14/antd/</url>
    
    <content type="html"><![CDATA[<h3 id="table"><a href="#table" class="headerlink" title="table"></a>table</h3><ul><li>table实现高度支适应 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">scroll=&#123;&#123;<span class="hljs-attr">y</span>:<span class="hljs-string">&#x27;&#x27;</span><span class="hljs-title function_">calc</span>(100vh-100px)&#125;&#125;<br></code></pre></td></tr></table></figure></li><li>table columns 数量不多的时候scroll的 x 设置100%</li><li>table 默认展开所有行不生效是因为react在初始化render的时候datasource是空的，需要在table前面判断一下datasource是不是有数据</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MySQL</title>
    <link href="/2022/09/14/mysql/"/>
    <url>/2022/09/14/mysql/</url>
    
    <content type="html"><![CDATA[<h3 id="mysql-密码的策略问题"><a href="#mysql-密码的策略问题" class="headerlink" title="mysql 密码的策略问题"></a>mysql 密码的策略问题</h3><p>在mysql8.0.1中密码策略变量的变化，有’_’连接符改变为’.’连接符；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">validate_password_length<br>// 改编为：<br>validate_password.length<br></code></pre></td></tr></table></figure><ol><li>查看password密码策略的变量名：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">SHOW VARIABLES LIKE <span class="hljs-string">&#x27;validate_password%&#x27;</span>;<br></code></pre></td></tr></table></figure></li><li>修改validate_password.policy参数的值：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> global validate_password.policy=0;<br></code></pre></td></tr></table></figure></li><li>媳妇爱validate_password.length参数的值来设置密码的最小长度(这个值是由mix_case_count number_count special_count需大于等于这三个值和的最小值)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> global validate_password.length=4;<br></code></pre></td></tr></table></figure></li></ol><h3 id="mysql-命令行清空"><a href="#mysql-命令行清空" class="headerlink" title="mysql 命令行清空"></a>mysql 命令行清空</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">system clear // 调用系统的clear清空<br></code></pre></td></tr></table></figure><h3 id="node-mysql8-0-出现客户端不支持认证协议引发的’ER-NOT-SUPPORTED-AUTH-MODE’问题"><a href="#node-mysql8-0-出现客户端不支持认证协议引发的’ER-NOT-SUPPORTED-AUTH-MODE’问题" class="headerlink" title="node + mysql8.0 出现客户端不支持认证协议引发的’ER_NOT_SUPPORTED_AUTH_MODE’问题"></a>node + mysql8.0 出现客户端不支持认证协议引发的’ER_NOT_SUPPORTED_AUTH_MODE’问题</h3><p>出错原因：<br>导致这个错误的原因是，目前，最新的mysql模块并未完全支持mysql8.0的’caching_sha2_password’加密方式，而’caching_sha2_passwrod’在mysql8.0中是默认的加密方式。因此，下面的命令是默认已经使用了’caching_sha2_password’加密方式，该账号、密码无法在mysql模块中使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql&gt; ALTER USER <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="hljs-string">&#x27;123456&#x27;</span>;<br>Query OK, 0 rows affected (0.12 sec)<br></code></pre></td></tr></table></figure><p>解决方法：<br>从新修改用户root的密码，并制定mysql模块能够支持的加密方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql&gt; ALTER USER <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="hljs-string">&#x27;123456&#x27;</span>;<br>Query OK, 0 rows affected (0.12 sec)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>mac</title>
    <link href="/2022/09/14/mac/"/>
    <url>/2022/09/14/mac/</url>
    
    <content type="html"><![CDATA[<h3 id="Chrome浏览器快捷键"><a href="#Chrome浏览器快捷键" class="headerlink" title="Chrome浏览器快捷键"></a>Chrome浏览器快捷键</h3><ul><li>command + r 刷新 </li><li>command + t 打开新的标签页</li><li>command + option + i 打开控制台</li><li>command + option + u </li><li>command + y 查看历史记录</li></ul><h3 id="常用的开发工具"><a href="#常用的开发工具" class="headerlink" title="常用的开发工具"></a>常用的开发工具</h3><ul><li>warp iterm 命令行工具</li><li>HaPiGo 聚焦搜索</li><li>Snipaste 截图拾色工具</li><li>Thor launcher 应用切换工具</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>tmux</title>
    <link href="/2022/09/14/tmux/"/>
    <url>/2022/09/14/tmux/</url>
    
    <content type="html"><![CDATA[<h3 id="鼠标光标切换"><a href="#鼠标光标切换" class="headerlink" title="鼠标光标切换"></a>鼠标光标切换</h3><p>老版本的Tmux开启鼠标模式的方法：先按Ctrl + B， 松开以后，输入冒号，输入set mouse-mode on 回车。 新版本取消了这条命令。<br>在新版本中，开启鼠标模式的方法为：先按Ctrl + B， 松开以后，输入冒号，输入set -g mouse on 回车。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Git</title>
    <link href="/2022/09/09/git/"/>
    <url>/2022/09/09/git/</url>
    
    <content type="html"><![CDATA[<h3 id="Git配置多个用户"><a href="#Git配置多个用户" class="headerlink" title="Git配置多个用户"></a>Git配置多个用户</h3><p>有时候在公司需要使用自己个人的github账号，但必须保证公司使用的gitlab账号没有影响，这个就需要同一台设备配置多账号。</p><h4 id="一、生成ssh密钥"><a href="#一、生成ssh密钥" class="headerlink" title="一、生成ssh密钥"></a>一、生成ssh密钥</h4><p>分别对github和gitlab生成对应的ssh密钥，并配置git访问不同的host的时候使用不同的密钥</p><ol><li>公司团队：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;公司邮箱地址&quot;</span><br></code></pre></td></tr></table></figure></li><li>个人：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;个人github邮箱&quot;</span> -f ~/.ssh/id_rsa.github<br></code></pre></td></tr></table></figure></li><li>在终端找到进入到 .ssh 文件目录 把 id_rsa.pub 的内容配置到gitlab上面 把 id_rsa.github.pub 的内容配置到自己的githua上面</li><li>在 .ssh 文件下面创建一个 config 文件 添加配置<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">Host gitlab<br>    HostName gitlab.com<br>    <span class="hljs-keyword">User</span> <span class="hljs-title">gitlab</span><br>    IdentityFile ~/.ssh/id_rsa.pub<br>Host github<br>    HostName github.com<br>    <span class="hljs-keyword">User</span> <span class="hljs-title">github</span><br>    Identityfile ~/.ssh/id_rsa.github<br></code></pre></td></tr></table></figure></li></ol><h4 id="二、测试"><a href="#二、测试" class="headerlink" title="二、测试"></a>二、测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@gitlab<br><span class="hljs-comment"># 如果配置成功会提示</span><br>Welcome to GitLab, @gitlab!<br><br>ssh -T git@github<br><span class="hljs-comment"># 如果配置成功会提示</span><br>Hi github!............<br></code></pre></td></tr></table></figure><h4 id="三、配置Git仓库"><a href="#三、配置Git仓库" class="headerlink" title="三、配置Git仓库"></a>三、配置Git仓库</h4><p>git的config文件记录了用户的基本信息，我们的账号信息也在里面，在这里我们要做的就是在本地仓库配置不同的用户信息访问不同的远程仓库</p><p>config文件通常有三个位置：</p><ul><li>system(系统级) 位于计算机git的安装目录，包含了适用于系统所有用户和所有库的值。如果你使用 –system ，它将明确的读和写这个文件。</li><li>global(用户级) 位于～&#x2F;.gitconfig,具体到你的用户。你可以通过 –global 选项是Git读或写这个特定的文件。</li><li>local(仓库级) 位于.git&#x2F;config,无论你当前在用的库是什么，特定指向该单一的库，优先级最高。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 公司团队配置</span><br>git config --global user.name <span class="hljs-string">&#x27;gitlab&#x27;</span> // 公司账号名称<br>git config --global user.email <span class="hljs-string">&#x27;gitlab@gitlab.com&#x27;</span> // 公司邮箱<br><br><span class="hljs-comment"># 个人账号配置</span><br>git config --<span class="hljs-built_in">local</span> user.name <span class="hljs-string">&#x27;github&#x27;</span> <br>git config --<span class="hljs-built_in">local</span> user.email <span class="hljs-string">&#x27;github@github.com&#x27;</span><br></code></pre></td></tr></table></figure></li></ul><h4 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 之前的方式:单个账号</span><br>git <span class="hljs-built_in">clone</span> git@github.com:xxxx/xxx.git <span class="hljs-comment">#缺省config配置时</span><br>git <span class="hljs-built_in">clone</span> git@github:xxxx/xxx.git <span class="hljs-comment">#config配置后，等价于第一条语句</span><br><br><span class="hljs-comment"># 现在要改为，git clone git@域名别称：xxxx/xxx.git</span><br><span class="hljs-comment"># 就是使用域名地址的别名来区分</span><br>git <span class="hljs-built_in">clone</span> git@github:xxxx/xxx.git<br>git <span class="hljs-built_in">clone</span> git@gitlab:xxxx/xxx.git<br></code></pre></td></tr></table></figure><h3 id="Git查看-x2F-修改配置文件"><a href="#Git查看-x2F-修改配置文件" class="headerlink" title="Git查看&#x2F;修改配置文件"></a>Git查看&#x2F;修改配置文件</h3><p>这样就可以编辑配置文件了</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">vim .git/config<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
